# Generated by Django 2.1.7 on 2019-03-24 02:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Champion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=255)),
                ('champId', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('key', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('blurb', models.TextField(max_length=255)),
                ('info_attack', models.IntegerField()),
                ('info_defense', models.IntegerField()),
                ('info_magic', models.IntegerField()),
                ('info_difficulty', models.IntegerField()),
                ('image_full', models.CharField(max_length=255)),
                ('image_sprite', models.CharField(max_length=255)),
                ('image_group', models.CharField(max_length=255)),
                ('image_x', models.IntegerField(default=0)),
                ('image_y', models.IntegerField(default=0)),
                ('image_w', models.IntegerField(default=0)),
                ('image_h', models.IntegerField(default=0)),
                ('tags', models.CharField(max_length=255)),
                ('partype', models.CharField(max_length=255)),
                ('stats_hp', models.DecimalField(decimal_places=4, max_digits=8)),
                ('stats_hpperlevel', models.DecimalField(decimal_places=4, max_digits=8)),
                ('stats_mp', models.DecimalField(decimal_places=4, max_digits=8)),
                ('stats_mpperlevel', models.DecimalField(decimal_places=4, max_digits=8)),
                ('stats_movespeed', models.DecimalField(decimal_places=4, max_digits=8)),
                ('stats_armor', models.DecimalField(decimal_places=4, max_digits=8)),
                ('stats_armorperlevel', models.DecimalField(decimal_places=4, max_digits=8)),
                ('stats_spellblock', models.DecimalField(decimal_places=4, max_digits=8)),
                ('stats_spellblockperlevel', models.DecimalField(decimal_places=4, max_digits=8)),
                ('stats_attackrange', models.DecimalField(decimal_places=4, max_digits=8)),
                ('stats_hpregen', models.DecimalField(decimal_places=4, max_digits=8)),
                ('stats_hpregenperlevel', models.DecimalField(decimal_places=4, max_digits=8)),
                ('stats_mpregen', models.DecimalField(decimal_places=4, max_digits=8)),
                ('stats_mpregenperlevel', models.DecimalField(decimal_places=4, max_digits=8)),
                ('stats_crit', models.DecimalField(decimal_places=4, max_digits=8)),
                ('stats_critperlevel', models.DecimalField(decimal_places=4, max_digits=8)),
                ('stats_attackdamage', models.DecimalField(decimal_places=4, max_digits=8)),
                ('stats_attackdamageperlevel', models.DecimalField(decimal_places=4, max_digits=8)),
                ('stats_attackspeedperlevel', models.DecimalField(decimal_places=4, max_digits=8)),
                ('stats_attackspeed', models.DecimalField(decimal_places=4, max_digits=8)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platformId', models.CharField(max_length=255)),
                ('gameId', models.IntegerField()),
                ('queueId', models.IntegerField()),
                ('seasonId', models.IntegerField()),
                ('mapId', models.IntegerField()),
                ('gameMode', models.CharField(max_length=255)),
                ('gameType', models.CharField(max_length=255)),
                ('gameVersion', models.CharField(max_length=255)),
                ('gameDuration', models.IntegerField()),
                ('timestamp', models.IntegerField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Matches',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currentPlatformId', models.CharField(max_length=255)),
                ('platformId', models.CharField(max_length=255)),
                ('matchHistoryUri', models.CharField(max_length=255)),
                ('spell1Id', models.IntegerField()),
                ('spell2Id', models.IntegerField()),
                ('neutralMinionsKilledTeamJungle', models.IntegerField()),
                ('visionScore', models.IntegerField()),
                ('magicDamageDealtToChampions', models.IntegerField()),
                ('largestMultiKill', models.IntegerField()),
                ('totalTimeCrowdControlDealt', models.IntegerField()),
                ('longestTimeSpentLiving', models.IntegerField()),
                ('perk1Var1', models.IntegerField()),
                ('perk1Var3', models.IntegerField()),
                ('perk1Var2', models.IntegerField()),
                ('tripleKills', models.IntegerField()),
                ('perk5', models.IntegerField()),
                ('perk4', models.IntegerField()),
                ('playerScore9', models.IntegerField()),
                ('playerScore8', models.IntegerField()),
                ('kills', models.IntegerField()),
                ('playerScore1', models.IntegerField()),
                ('playerScore0', models.IntegerField()),
                ('playerScore3', models.IntegerField()),
                ('playerScore2', models.IntegerField()),
                ('playerScore5', models.IntegerField()),
                ('playerScore4', models.IntegerField()),
                ('playerScore7', models.IntegerField()),
                ('playerScore6', models.IntegerField()),
                ('perk5Var1', models.IntegerField()),
                ('perk5Var3', models.IntegerField()),
                ('perk5Var2', models.IntegerField()),
                ('totalScoreRank', models.IntegerField()),
                ('neutralMinionsKilled', models.IntegerField()),
                ('statPerk1', models.IntegerField()),
                ('statPerk0', models.IntegerField()),
                ('damageDealtToTurrets', models.IntegerField()),
                ('physicalDamageDealtToChampions', models.IntegerField()),
                ('damageDealtToObjectives', models.IntegerField()),
                ('perk2Var2', models.IntegerField()),
                ('perk2Var3', models.IntegerField()),
                ('totalUnitsHealed', models.IntegerField()),
                ('perk2Var1', models.IntegerField()),
                ('perk4Var1', models.IntegerField()),
                ('totalDamageTaken', models.IntegerField()),
                ('perk4Var3', models.IntegerField()),
                ('wardsKilled', models.IntegerField()),
                ('largestCriticalStrike', models.IntegerField()),
                ('largestKillingSpree', models.IntegerField()),
                ('quadraKills', models.IntegerField()),
                ('magicDamageDealt', models.IntegerField()),
                ('firstBloodAssist', models.BooleanField(default=False)),
                ('item2', models.IntegerField()),
                ('item3', models.IntegerField()),
                ('item0', models.IntegerField()),
                ('item1', models.IntegerField()),
                ('item6', models.IntegerField()),
                ('item4', models.IntegerField()),
                ('item5', models.IntegerField()),
                ('perk1', models.IntegerField()),
                ('perk0', models.IntegerField()),
                ('perk3', models.IntegerField()),
                ('perk2', models.IntegerField()),
                ('perk3Var3', models.IntegerField()),
                ('perk3Var2', models.IntegerField()),
                ('perk3Var1', models.IntegerField()),
                ('damageSelfMitigated', models.IntegerField()),
                ('magicalDamageTaken', models.IntegerField()),
                ('perk0Var2', models.IntegerField()),
                ('firstInhibitorKill', models.BooleanField(default=False)),
                ('trueDamageTaken', models.IntegerField()),
                ('assists', models.IntegerField()),
                ('perk4Var2', models.IntegerField()),
                ('goldSpent', models.IntegerField()),
                ('trueDamageDealt', models.IntegerField()),
                ('participantId', models.IntegerField()),
                ('physicalDamageDealt', models.IntegerField()),
                ('sightWardsBoughtInGame', models.IntegerField()),
                ('totalDamageDealtToChampions', models.IntegerField()),
                ('physicalDamageTaken', models.IntegerField()),
                ('totalPlayerScore', models.IntegerField()),
                ('win', models.BooleanField(default=False)),
                ('objectivePlayerScore', models.IntegerField()),
                ('totalDamageDealt', models.IntegerField()),
                ('neutralMinionsKilledEnemyJungle', models.IntegerField()),
                ('deaths', models.IntegerField()),
                ('wardsPlaced', models.IntegerField()),
                ('perkPrimaryStyle', models.IntegerField()),
                ('perkSubStyle', models.IntegerField()),
                ('turretKills', models.IntegerField()),
                ('firstBloodKill', models.BooleanField(default=False)),
                ('trueDamageDealtToChampions', models.IntegerField()),
                ('goldEarned', models.IntegerField()),
                ('killingSprees', models.IntegerField()),
                ('unrealKills', models.IntegerField()),
                ('firstTowerAssist', models.BooleanField(default=False)),
                ('firstTowerKill', models.BooleanField(default=False)),
                ('champLevel', models.IntegerField()),
                ('doubleKills', models.IntegerField()),
                ('inhibitorKills', models.IntegerField()),
                ('firstInhibitorAssist', models.BooleanField(default=False)),
                ('perk0Var1', models.IntegerField()),
                ('combatPlayerScore', models.IntegerField()),
                ('perk0Var3', models.IntegerField()),
                ('visionWardsBoughtInGame', models.IntegerField()),
                ('pentaKills', models.IntegerField()),
                ('totalHeal', models.IntegerField()),
                ('totalMinionsKilled', models.IntegerField()),
                ('timeCCingOthers', models.IntegerField()),
                ('statPerk2', models.IntegerField()),
                ('champion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Players', to='dashboard.Champion')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Players', to='dashboard.Match')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=255)),
                ('last_name', models.CharField(blank=True, max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Profiles', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Summoner',
            fields=[
                ('summonerName', models.CharField(max_length=255)),
                ('summonerId', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('puuid', models.CharField(max_length=255, unique=True)),
                ('accountId', models.CharField(max_length=255, unique=True)),
                ('server', models.CharField(max_length=255)),
                ('profileIconId', models.IntegerField(blank=True, default=1)),
                ('summonerLevel', models.CharField(blank=True, max_length=255)),
                ('soloQ_leagueId', models.CharField(blank=True, max_length=255)),
                ('soloQ_leagueName', models.CharField(blank=True, max_length=255)),
                ('soloQ_tier', models.CharField(blank=True, max_length=255)),
                ('soloQ_hotStreak', models.BooleanField(default=False)),
                ('soloQ_wins', models.IntegerField(blank=True, default=0, null=True)),
                ('soloQ_losses', models.IntegerField(blank=True, default=0, null=True)),
                ('soloQ_veteran', models.BooleanField(default=False)),
                ('soloQ_rank', models.CharField(blank=True, max_length=255, null=True)),
                ('soloQ_inactive', models.BooleanField(default=False)),
                ('soloQ_freshBlood', models.BooleanField(default=False)),
                ('soloQ_leaguePoints', models.IntegerField(blank=True, default=0, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField()),
                ('user_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Summoners', to='dashboard.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('win', models.BooleanField(default=False)),
                ('teamId', models.IntegerField()),
                ('firstDragon', models.BooleanField(default=False)),
                ('firstInhibitor', models.BooleanField(default=False)),
                ('firstRiftHerald', models.BooleanField(default=False)),
                ('firstBaron', models.BooleanField(default=False)),
                ('baronKills', models.IntegerField()),
                ('riftHeraldKills', models.IntegerField()),
                ('firstBlood', models.BooleanField(default=False)),
                ('firstTower', models.BooleanField(default=False)),
                ('inhibitorKills', models.IntegerField()),
                ('towerKills', models.IntegerField()),
                ('dragonKills', models.IntegerField()),
                ('dominionVictoryScore', models.IntegerField()),
                ('vilemawKills', models.IntegerField()),
                ('match', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Teams', to='dashboard.Match')),
            ],
        ),
        migrations.AddField(
            model_name='player',
            name='summoner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Players', to='dashboard.Summoner'),
        ),
        migrations.AddField(
            model_name='player',
            name='team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.Team'),
        ),
        migrations.AddField(
            model_name='match',
            name='players',
            field=models.ManyToManyField(related_name='Matches', to='dashboard.Summoner'),
        ),
    ]
